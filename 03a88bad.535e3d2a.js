(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{65:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return c})),t.d(a,"metadata",(function(){return l})),t.d(a,"toc",(function(){return i})),t.d(a,"default",(function(){return p}));var n=t(3),r=t(7),m=(t(0),t(88)),c={slug:"/",title:"Introduction",hide_title:!0},l={unversionedId:"index",id:"index",isDocsHomePage:!1,title:"Introduction",description:"Megatar",source:"@site/../docs/index.md",slug:"/",permalink:"/megatar/",editUrl:"https://github.com/felipecrs/megatar/edit/master/website/../docs/index.md",version:"current",sidebar:"sidebar",next:{title:"megatar",permalink:"/megatar/api"}},i=[{value:"<code>megatar autocomplete [SHELL]</code>",id:"megatar-autocomplete-shell",children:[]},{value:"<code>megatar help [COMMAND]</code>",id:"megatar-help-command",children:[]},{value:"<code>megatar save-image IMAGE</code>",id:"megatar-save-image-image",children:[]}],o={toc:i};function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(m.b)("wrapper",Object(n.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(m.b)("h1",{id:"megatar"},"Megatar"),Object(m.b)("p",null,"Create full offline Helm chart packages."),Object(m.b)("p",null,Object(m.b)("a",{parentName:"p",href:"https://oclif.io"},Object(m.b)("img",{parentName:"a",src:"https://img.shields.io/badge/cli-oclif-brightgreen.svg",alt:"oclif"})),"\n",Object(m.b)("a",{parentName:"p",href:"https://npmjs.org/package/megatar"},Object(m.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/megatar.svg",alt:"Version"})),"\n",Object(m.b)("a",{parentName:"p",href:"https://npmjs.org/package/megatar"},Object(m.b)("img",{parentName:"a",src:"https://img.shields.io/npm/dw/megatar.svg",alt:"Downloads/week"})),"\n",Object(m.b)("a",{parentName:"p",href:"https://github.com/felipecassiors/megatar/blob/master/package.json"},Object(m.b)("img",{parentName:"a",src:"https://img.shields.io/npm/l/megatar.svg",alt:"License"}))),Object(m.b)("ul",null,Object(m.b)("li",{parentName:"ul"},Object(m.b)("a",{parentName:"li",href:"#usage"},"Usage")),Object(m.b)("li",{parentName:"ul"},Object(m.b)("a",{parentName:"li",href:"#commands"},"Commands"))),Object(m.b)("h1",{id:"usage"},"Usage"),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre",className:"language-sh-session"},"$ npm install -g megatar\n$ megatar COMMAND\nrunning command...\n$ megatar (-v|--version|version)\nmegatar/1.0.7 linux-x64 node-v12.21.0\n$ megatar --help [COMMAND]\nUSAGE\n  $ megatar COMMAND\n...\n")),Object(m.b)("h1",{id:"commands"},"Commands"),Object(m.b)("ul",null,Object(m.b)("li",{parentName:"ul"},Object(m.b)("a",{parentName:"li",href:"#megatar-autocomplete-shell"},Object(m.b)("inlineCode",{parentName:"a"},"megatar autocomplete [SHELL]"))),Object(m.b)("li",{parentName:"ul"},Object(m.b)("a",{parentName:"li",href:"#megatar-help-command"},Object(m.b)("inlineCode",{parentName:"a"},"megatar help [COMMAND]"))),Object(m.b)("li",{parentName:"ul"},Object(m.b)("a",{parentName:"li",href:"#megatar-save-image-image"},Object(m.b)("inlineCode",{parentName:"a"},"megatar save-image IMAGE")))),Object(m.b)("h2",{id:"megatar-autocomplete-shell"},Object(m.b)("inlineCode",{parentName:"h2"},"megatar autocomplete [SHELL]")),Object(m.b)("p",null,"display autocomplete installation instructions"),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre"},"USAGE\n  $ megatar autocomplete [SHELL]\n\nARGUMENTS\n  SHELL  shell type\n\nOPTIONS\n  -r, --refresh-cache  Refresh cache (ignores displaying instructions)\n\nEXAMPLES\n  $ megatar autocomplete\n  $ megatar autocomplete bash\n  $ megatar autocomplete zsh\n  $ megatar autocomplete --refresh-cache\n")),Object(m.b)("p",null,Object(m.b)("em",{parentName:"p"},"See code: ",Object(m.b)("a",{parentName:"em",href:"https://github.com/oclif/plugin-autocomplete/blob/v0.3.0/src/commands/autocomplete/index.ts"},"@oclif/plugin-autocomplete"))),Object(m.b)("h2",{id:"megatar-help-command"},Object(m.b)("inlineCode",{parentName:"h2"},"megatar help [COMMAND]")),Object(m.b)("p",null,"display help for megatar"),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre"},"USAGE\n  $ megatar help [COMMAND]\n\nARGUMENTS\n  COMMAND  command to show help for\n\nOPTIONS\n  --all  see all commands in CLI\n")),Object(m.b)("p",null,Object(m.b)("em",{parentName:"p"},"See code: ",Object(m.b)("a",{parentName:"em",href:"https://github.com/oclif/plugin-help/blob/v3.2.2/src/commands/help.ts"},"@oclif/plugin-help"))),Object(m.b)("h2",{id:"megatar-save-image-image"},Object(m.b)("inlineCode",{parentName:"h2"},"megatar save-image IMAGE")),Object(m.b)("p",null,"save a docker image to a tgz file"),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre"},"USAGE\n  $ megatar save-image IMAGE\n\nARGUMENTS\n  IMAGE  the docker image to save\n\nOPTIONS\n  -h, --help                 show CLI help\n  -t, --new-tag=new-tag      the new tag to write in the image\n  --[no-]discard-repository  whether to discard the repository and registry fields or not\n\nEXAMPLES\n  $ megatar save-image hello-world\n  $ megatar save-image hello-world --new-tag test\n")),Object(m.b)("p",null,Object(m.b)("em",{parentName:"p"},"See code: ",Object(m.b)("a",{parentName:"em",href:"https://github.com/felipecassiors/megatar/blob/v1.0.7/src/commands/save-image.ts"},"src/commands/save-image.ts"))))}p.isMDXComponent=!0}}]);